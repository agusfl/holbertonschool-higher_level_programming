===============================
Test suite for: 7-base_geometry
===============================

Import method to test:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Check documentation in file, class & method.     

	>>> module_doc = __import__('7-base_geometry').__doc__
	>>> print(len(module_doc) > 0)
	True

	>>> class_doc = __import__('7-base_geometry').BaseGeometry.__doc__
	>>> print(len(class_doc) > 0)
	True

	>>> function_doc = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
	>>> print(len(function_doc) > 0)
	True

	>>> function_doc = __import__('7-base_geometry').BaseGeometry.area.__doc__
        >>> print(len(function_doc) > 0)
        True

Initialize Class:

	>>> bg = BaseGeometry()

Testing correct output --> nothing is returned:

	>>> bg.integer_validator("my_int", 10)

Testing string:

	>>> bg.integer_validator("name", "Agustin")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Testing with 0:

	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
	...
	ValueError: name must be greater than 0

Testing with a negative number:

	>>> bg.integer_validator("name", -2)
	Traceback (most recent call last):
	...
	ValueError: name must be greater than 0

Testing area method:

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Testing integer_validator with no arguments:

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Testing integer_validator with only 1 argument:

	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Testing with other data type that is no an int as second argument:

	List:

	>>> bg.integer_validator("name", [4, 5])
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

	Tuple:

        >>> bg.integer_validator("name", (4, 5))
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

	Dict:

        >>> bg.integer_validator("name", {"hola": 5, "como": 4})
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

	Boolean:

        >>> bg.integer_validator("name", True)
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

	String:

        >>> bg.integer_validator("name", "string")
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

	Float:

        >>> bg.integer_validator("name", 5.6)
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

Testing with None as second argument:

	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

More tests:

	>>> dir(bg) == dir(BaseGeometry)
	True

	>>> 'area' in dir(BaseGeometry)
	True

	>>> 'integer_validator' in dir(BaseGeometry)
	True
